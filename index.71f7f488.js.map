{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAkB,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAG5C,EAAmB,EAAE,CAE3B,EAAY,OAAO,CAAC,SAAC,CAArB,EACE,IAAM,EAAS,EAAO,WAAW,CAC9B,KAAK,CAAC,IACN,MAAM,CAAC,SAAC,CAFX,EAEkB,MAAA,AAAO,MAAP,CACf,GAAA,IAAI,CAAC,IAER,EAAiB,IAAI,CAAC,CAAC,EACzB,GAEA,IAAM,EAAoB,SAAC,CAA3B,EACE,OAAO,EAAM,cAAc,CAAC,QAC9B,EAEM,EAAQ,EAAiB,MAAM,CACnC,SAAC,CAAA,CAAa,CADhB,EACgC,OAAA,EAAc,CAC5C,EAAA,GAGI,EAAU,EAAQ,EAAiB,MAAM,AAI/C,CAFwB,SAAS,aAAa,CAAC,qBAE/B,WAAW,CAAG,EAAkB,GAIhD,AAF0B,SAAS,aAAa,CAAC,uBAE/B,WAAW,CAAG,EAAkB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar populations = _to_consumable_array(document.querySelectorAll(\"span.population\"));\n// const onePopulation = document.queryElementById\nvar mappedPopulation = [];\npopulations.forEach(function(amount) {\n    var number = amount.textContent.split(\"\").filter(function(el) {\n        return el !== \",\";\n    }).join(\"\");\n    mappedPopulation.push(+number);\n});\nvar formattedNumberUS = function(input) {\n    return input.toLocaleString(\"en-US\");\n};\nvar total = mappedPopulation.reduce(function(accumulator, curentValue) {\n    return accumulator + curentValue;\n}, 0);\nvar average = total / mappedPopulation.length;\nvar totalPopulation = document.querySelector(\".total-population\");\ntotalPopulation.textContent = formattedNumberUS(total);\nvar averagePopulation = document.querySelector(\".average-population\");\naveragePopulation.textContent = formattedNumberUS(average);\n\n//# sourceMappingURL=index.71f7f488.js.map\n","'use strict';\n\nconst populations = [...document.querySelectorAll('span.population')];\n// const onePopulation = document.queryElementById\n\nconst mappedPopulation = [];\n\npopulations.forEach((amount) => {\n  const number = amount.textContent\n    .split('')\n    .filter((el) => el !== ',')\n    .join('');\n\n  mappedPopulation.push(+number);\n});\n\nconst formattedNumberUS = (input) => {\n  return input.toLocaleString('en-US');\n};\n\nconst total = mappedPopulation.reduce(\n  (accumulator, curentValue) => accumulator + curentValue,\n  0,\n);\n\nconst average = total / mappedPopulation.length;\n\nconst totalPopulation = document.querySelector('.total-population');\n\ntotalPopulation.textContent = formattedNumberUS(total);\n\nconst averagePopulation = document.querySelector('.average-population');\n\naveragePopulation.textContent = formattedNumberUS(average);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","populations","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","mappedPopulation","forEach","amount","number","textContent","split","filter","el","join","push","formattedNumberUS","input","toLocaleString","total","reduce","accumulator","curentValue","average","totalPopulation","querySelector","averagePopulation"],"version":3,"file":"index.71f7f488.js.map"}